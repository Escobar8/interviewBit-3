Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers.

Assume that there will only be one solution

Example: 
given array S = {-1 2 1 -4}, 
and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2) 

********************************************************************************************************

int Solution::threeSumClosest(vector<int> &A, int sum) {
  sort(A.begin() , A.end());
    int diff = INT_MAX;
    int num = INT_MAX;
    for(int i=0 ; i<A.size()-2 ; i++){
      int l=i+1 , r = A.size()-1;
      while(l<r){
          if((abs(A[i]+A[l]+A[r]-sum))<diff){
          num = A[i] + A[l] + A[r];
          diff = abs(A[i]+A[l]+A[r]-sum);
          }
          if((A[i]+A[l]+A[r]<sum)){
              l++;
          }
          else{
              r--;
          }
      }
  }
  return num;
}
