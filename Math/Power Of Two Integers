Given a positive integer which fits in a 32 bit signed integer, find if it can be expressed as A^P where P > 1 and A > 0. A and P both should be integers.

Example

Input : 4
Output : True  
as 2^2 = 4.

*********************************************************************************************
bool Solution::isPower(int A) {
    if(A == 1) return 1;
    for(int i=2;i<=sqrt(A) ; i++){
        int p = i;
        while(p < A){
            p *= p;
            if(p == A) return true;
        }
    }
    return false;
}

**********************************************************************************************
Better answer as it takes less time
-----------------------------------

bool Solution::isPower(int A) {
    if(A == 1)
    {
        return 1;
    }

    for(int i=2;i<=sqrt(A);i++)
    {
        int temp = A;
        while(temp != 1)
        {
            if(temp%i)
            {
                break;
            }
            temp = temp/i;
        }
        if(temp == 1)
        {
            return 1;
        }
    }
    return 0;
}

************************************************************************************************
Approach:-
For B = 2, number of possibilities = sqrt(INT_MAX) = sqrt(2^31 - 1) < 2^16.
For B = 3, number of possibilities = INT_MAX**1/3 < 2^11
For B = 4, number of possibilities = INT_MAX**1/4 < 2^8
.
.
.
For B = 32, number of possibilities = 0 ( Not considering 1 as its considered in the first case, and 2^32 exceeds INT_MAX ). 
____________________________________________________________________________________________________________________________


bool Solution::isPower(int A) {
       if(A == 1){
        return true;
    }
    
    for(int i = 2; i < 32; i++){
        for(int j = 2; j <= pow(INT_MAX, 1.0/i); j++){
            if(pow(j, i) == A){
                return true;
            }
        }
    }
    return false;
}

