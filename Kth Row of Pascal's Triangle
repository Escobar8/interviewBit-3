Given an index k, return the kth row of the Pascal’s triangle.

Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:

Input : k = 3

Return : [1,3,3,1]
 NOTE : k is 0 based. k = 0, corresponds to the row [1]. 
Note:Could you optimize your algorithm to use only O(k) extra space?

***********************************************************************************************************
vector<int> Solution::getRow(int A) {
      vector<int> row;
      vector<int> newRow;
      row.push_back(1);
      if(A  == 0 ) return row;
      while(row.size() < A+1){
      newRow.push_back(1);
      for(int i=1; i<row.size() ; i++){
          newRow.push_back(row[i]+row[i-1]);
      }
      newRow.push_back(1);
      row = newRow;
      newRow.clear();
      }
      return row;
}
